import getWindow from "../dom-utils/getWindow.js";
var passive = {
  passive: true
};

function toggleEventListeners(_ref) {
  var state = _ref.state,
      instance = _ref.instance,
      scroll = _ref.scroll,
      resize = _ref.resize;

  if (scroll != null) {
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
    scrollParents.forEach(function (scrollParent) {
      return scroll ? scrollParent.addEventListener('scroll', instance.update, passive) : scrollParent.removeEventListener('scroll', instance.update);
    });
  }

  if (resize != null) {
    var window = getWindow(state.elements.popper);
    resize ? window.addEventListener('resize', instance.update, passive) : window.removeEventListener('resize', instance.update);
  }
}

function onLoad(_ref2) {
  var state = _ref2.state,
      instance = _ref2.instance,
      name = _ref2.name,
      options = _ref2.options;
  var _options$scroll = options.scroll,
      scroll = _options$scroll === void 0 ? true : _options$scroll,
      _options$resize = options.resize,
      resize = _options$resize === void 0 ? true : _options$resize; // cache initial options so we can compare them later

  state.modifiersData[name + "#persistent"] = {
    scroll: scroll,
    resize: resize
  };
  toggleEventListeners({
    state: state,
    instance: instance,
    scroll: scroll,
    resize: resize
  });
  return state;
}

function onDestroy(_ref3) {
  var state = _ref3.state,
      instance = _ref3.instance;
  toggleEventListeners({
    state: state,
    instance: instance,
    scroll: false,
    resize: false
  });
}

function update(_ref4) {
  var state = _ref4.state,
      options = _ref4.options,
      instance = _ref4.instance,
      name = _ref4.name;
  var data = state.modifiersData[name + "#persistent"];
  var _options$scroll2 = options.scroll,
      scroll = _options$scroll2 === void 0 ? true : _options$scroll2,
      _options$resize2 = options.resize,
      resize = _options$resize2 === void 0 ? true : _options$resize2; // set options to `null` if they didn't change, so we know not to run any logic

  if (data.scroll === scroll) {
    scroll = null;
  }

  if (data.resize === resize) {
    resize = null;
  } // Update cache


  state.modifiersData[name + "#persistent"] = {
    scroll: scroll,
    resize: resize
  };
  toggleEventListeners({
    state: state,
    instance: instance,
    scroll: scroll,
    resize: resize
  });
  return state;
}

export default {
  name: 'eventListeners',
  enabled: true,
  phase: 'write',
  fn: update,
  onLoad: onLoad,
  onDestroy: onDestroy,
  data: {}
};